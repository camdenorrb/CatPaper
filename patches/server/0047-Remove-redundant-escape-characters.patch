From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: camdenorrb <me@12oclock.dev>
Date: Sat, 22 Oct 2022 04:14:17 -0500
Subject: [PATCH] Remove redundant escape characters


diff --git a/src/main/java/net/minecraft/server/Bootstrap.java b/src/main/java/net/minecraft/server/Bootstrap.java
index 3974c4d14b4f0d0cfea096a2d9eb2f243fd2a16c..0afa54ad6935f1c8bc5d5c7b3b4ce246d5a995ea 100644
--- a/src/main/java/net/minecraft/server/Bootstrap.java
+++ b/src/main/java/net/minecraft/server/Bootstrap.java
@@ -95,7 +95,7 @@ public class Bootstrap {
                 BlockStateData.register(1023, "{Name:'minecraft:oak_sign',Properties:{rotation:'15'}}", "{Name:'minecraft:standing_sign',Properties:{rotation:'15'}}");
                 ItemIdFix.ITEM_NAMES.put(323, "minecraft:oak_sign");
 
-                BlockStateData.register(1440, "{Name:\'minecraft:portal\',Properties:{axis:\'x\'}}", "{Name:\'minecraft:portal\',Properties:{axis:\'x\'}}");
+                BlockStateData.register(1440, "{Name:'minecraft:portal',Properties:{axis:'x'}}", "{Name:\'minecraft:portal\',Properties:{axis:\'x\'}}");
 
                 ItemIdFix.ITEM_NAMES.put(409, "minecraft:prismarine_shard");
                 ItemIdFix.ITEM_NAMES.put(410, "minecraft:prismarine_crystals");
diff --git a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
index 21bbe6933a3bb5778a5c5f7f96fe019433e9194f..7c40536c89a8172613d14341001b25eec0cc8c10 100644
--- a/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
+++ b/src/main/java/net/minecraft/server/network/ServerGamePacketListenerImpl.java
@@ -3516,7 +3516,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
                     this.getCraftPlayer().addChannel(channel);
                 }
             } catch (Exception ex) {
-                ServerGamePacketListenerImpl.LOGGER.error("Couldn\'t register custom payload", ex);
+                ServerGamePacketListenerImpl.LOGGER.error("Couldn't register custom payload", ex);
                 this.disconnect("Invalid payload REGISTER!", org.bukkit.event.player.PlayerKickEvent.Cause.INVALID_PAYLOAD); // Paper - kick event cause
             }
         } else if (packet.identifier.equals(CUSTOM_UNREGISTER)) {
@@ -3526,7 +3526,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
                     this.getCraftPlayer().removeChannel(channel);
                 }
             } catch (Exception ex) {
-                ServerGamePacketListenerImpl.LOGGER.error("Couldn\'t unregister custom payload", ex);
+                ServerGamePacketListenerImpl.LOGGER.error("Couldn't unregister custom payload", ex);
                 this.disconnect("Invalid payload UNREGISTER!", org.bukkit.event.player.PlayerKickEvent.Cause.INVALID_PAYLOAD); // Paper - kick event cause
             }
         } else {
@@ -3544,7 +3544,7 @@ public class ServerGamePacketListenerImpl implements ServerPlayerConnection, Tic
                 // Paper end
                 this.cserver.getMessenger().dispatchIncomingMessage(this.player.getBukkitEntity(), packet.identifier.toString(), data);
             } catch (Exception ex) {
-                ServerGamePacketListenerImpl.LOGGER.error("Couldn\'t dispatch custom payload", ex);
+                ServerGamePacketListenerImpl.LOGGER.error("Couldn't dispatch custom payload", ex);
                 this.disconnect("Invalid custom payload!", org.bukkit.event.player.PlayerKickEvent.Cause.INVALID_PAYLOAD); // Paper - kick event cause
             }
         }
diff --git a/src/main/java/org/spigotmc/SpigotConfig.java b/src/main/java/org/spigotmc/SpigotConfig.java
index 20a5203a8540a9a0383f91c5ca55f1e1ff9eff42..9042848450f2f90d4bfc5f5be0c0063038932c9d 100644
--- a/src/main/java/org/spigotmc/SpigotConfig.java
+++ b/src/main/java/org/spigotmc/SpigotConfig.java
@@ -201,7 +201,7 @@ public class SpigotConfig
     public static String unknownCommandMessage;
     public static String serverFullMessage;
     public static @NotNull String outdatedClientMessage = "Outdated client! Please use {0}";
-    public static @NotNull String outdatedServerMessage = "Outdated server! I\'m still on {0}";
+    public static @NotNull String outdatedServerMessage = "Outdated server! I'm still on {0}";
     private static @NotNull String transform(@NotNull String s)
     {
         return ChatColor.translateAlternateColorCodes( '&', s ).replaceAll( "\\\\n", "\n" );
